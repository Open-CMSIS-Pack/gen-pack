name: gen_pack
on:
  workflow_dispatch:
  pull_request:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0     
        
      - name: Install Ubuntu deps
        run: |
          sudo apt-get update
          sudo apt-get install \
            shellcheck

      - uses: ammaraskar/gcc-problem-matcher@master

      - name: Run ShellCheck
        run: |
          shellcheck -s bash -f gcc gen-pack lib/*

  cov:
    runs-on: ubuntu-latest
    timeout-minutes: 5 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0     
          submodules: recursive

      - name: Install Ubuntu deps
        run: |
          sudo apt-get update
          sudo apt-get install \
            kcov

      - name: Run kcov
        run: |
          ./test/run_cov.sh 
          
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: test/cov/all/kcov-merged/cobertura.xml
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
  
      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        os: [ macos-12, ubuntu-20.04, windows-2022 ]
        include:
          - os: macos-12
            target: darwin64
            archiveext: tar.gz
            unarcmd: tar -xzf
          - os: ubuntu-20.04
            target: linux64
            archiveext: tar.gz
            unarcmd: tar -xzf
          - os: windows-2022
            target: windows64
            archiveext: zip
            unarcmd: 7z x
    env:
       CMSIS_PACK_ROOT: ${{ github.workspace }}/.packs/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Ubuntu deps
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install \
            libxml2-utils

      - name: Install MacOS deps
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew install \
            bash \
            coreutils \
            grep

      - name: Install CMSIS-Toolbox
        shell: bash
        run: |
          curl -L https://github.com/Open-CMSIS-Pack/devtools/releases/download/tools%2Ftoolbox%2F1.0.0/cmsis-toolbox-${{ matrix.target }}.${{ matrix.archiveext }} -o cmsis-toolbox-${{ matrix.target }}.${{ matrix.archiveext }}
          ${{ matrix.unarcmd }} cmsis-toolbox-${{ matrix.target }}.${{ matrix.archiveext }}
          echo "$(pwd)/cmsis-toolbox-${{ matrix.target }}/bin" >> $GITHUB_PATH

      - name: Install pack ARM.CMSIS
        shell: bash
        run: |
          cpackget init https://www.keil.com/pack/index.pidx
          cpackget pack add ARM.CMSIS

      - name: Run unit tests
        shell: bash
        env:
          LANG: en_GB.UTF-8
          LC_ALL: en_GB.UTF-8
        run: |
          ./test/run_all.sh
